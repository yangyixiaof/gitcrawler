package cn.yyx.research.language.JDTManager;

import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import org.eclipse.jdt.core.dom.ASTNode;

public class VDataPoolManager {
	
	public static String ConstantPool = "constant";
	public static String ClassHiddenPool = "classHidden";
	public static String VarOrObjPool = "varOrObj";
	
	Map<Integer, Integer> equivalentScope = new TreeMap<Integer, Integer>();
	
	Map<String, VDataPool> dataPools = new TreeMap<String, VDataPool>();
	{
		dataPools.put(ConstantPool, new VDataPool(equivalentScope));
		dataPools.put(ClassHiddenPool, new VDataPool(equivalentScope));
		dataPools.put(VarOrObjPool, new VDataPool(equivalentScope));
	}
	// the kinds of pools will not change.
	// VDataPool constantPool = new VDataPool();
	// VDataPool classHiddenPool = new VDataPool();//generated by me
	// VDataPool varOrObjPool = new VDataPool();
	
	public VDataPoolManager() {
	}
	
	public void AddData(String kind, ASTNode dataScope, String data)
	{
		VDataPool dpool = GetDataPool(kind);
		dpool.NewlyAssignedData(dataScope, data);
	}
	
	public int GetDataExactOffset(String kind, ASTNode dataScope, String data)
	{
		VDataPool dpool = GetDataPool(kind);
		return dpool.GetExactDataOffsetInDataOwnScope(dataScope, data);
	}
	
	//dpool.AScopeCreated(node, level);
	//dpool.AScopeDestroyed(node);
	//dpool.AddEquivalentScope(node1, node2);
	public void AScopeCreated(ASTNode node, int level)
	{
		Set<String> kinds = dataPools.keySet();
		Iterator<String> itr = kinds.iterator();
		while (itr.hasNext())
		{
			String kind = itr.next();
			VDataPool dpool = dataPools.get(kind);
			dpool.AScopeCreated(node, level);
		}
	}
	
	public void AScopeDestroyed(ASTNode node, int level)
	{
		Set<String> kinds = dataPools.keySet();
		Iterator<String> itr = kinds.iterator();
		while (itr.hasNext())
		{
			String kind = itr.next();
			VDataPool dpool = dataPools.get(kind);
			dpool.AScopeDestroyed(node);
		}
	}
	
	public void AddEquivalentScope(ASTNode node1, ASTNode node2)
	{
		equivalentScope.put(node2.hashCode(), node1.hashCode());
	}
	
	private VDataPool GetDataPool(String kind)
	{
		if (!dataPools.containsKey(kind))
		{
			dataPools.put(kind, new VDataPool(equivalentScope));
		}
		return dataPools.get(kind);
	}
	
}