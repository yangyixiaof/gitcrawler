/*protected String ThisPrefixFieldAccessNameHandle(ASTNode node) {
	if (node instanceof FieldAccess) {
		FieldAccess fa = (FieldAccess) node;
		Expression expr = fa.getExpression();
		if (expr instanceof ThisExpression) {
			return RawNamesHandle(fa.getName(), ReferenceHintLibrary.FieldUse);
		} else {
			if (expr instanceof FieldAccess) {
				String prefix = ThisPrefixFieldAccessNameHandle(expr);
				if (prefix == null) {
					return null;
				} else {
					return fa.getName().toString() + "." + prefix;
				}
			}
		}
	}
	return null;
}*/

		/*if (node instanceof SimpleType || node instanceof QualifiedType || node instanceof NameQualifiedType
				|| node instanceof WildcardType) {
			if (typecode == null) {
				if (node instanceof SimpleType || node instanceof QualifiedType || node instanceof NameQualifiedType) {
					typecode = type;
				}
				if (node instanceof WildcardType) {
					WildcardType wildtype = (WildcardType) node;
					if (wildtype.getBound() == null) {
						typecode = "?";
					} else {
						typecode = "?" + GCodeMetaInfo.WhiteSpaceReplacer
								+ (wildtype.isUpperBound() ? "extends" : "super") + GCodeMetaInfo.WhiteSpaceReplacer
								+ TypeCode(wildtype.getBound(), true);
					}
				}
				if (simplified) {
					if (node instanceof NameQualifiedType) {
						typecode = ((NameQualifiedType) node).getName().toString();
					}
					if (node instanceof QualifiedType) {
						typecode = ((QualifiedType) node).getName().toString();
					}
					if (node instanceof SimpleType) {
						Name name = ((SimpleType) node).getName();
						if (name instanceof QualifiedName) {
							typecode = ((QualifiedName) name).getName().toString();
						}
					}
				}
			}
		}
		if (node instanceof ArrayType) {
			if (typecode == null) {
				ArrayType arraynode = (ArrayType) node;
				Type pretype = arraynode.getElementType();
				String simplifiedtype = "Object";
				if (pretype instanceof PrimitiveType) {
					simplifiedtype = pretype.toString();
				}
				if (simplified) {
					int dimens = ((ArrayType) node).dimensions().size();
					String dimenstr = "";
					for (int i = 0; i < dimens; i++) {
						dimenstr += "[]";
					}
					typecode = simplifiedtype + dimenstr;
				} else {
					typecode = type;
				}
			}
		}
		if (node instanceof ParameterizedType) {

			// System.err.println("ParameterizedType:" + node);

			if (typecode == null) {
				ParameterizedType pt = (ParameterizedType) node;
				// if (simplified) {
				// typecode = TypeCode(pt.getType(), true);
				// } else {
				typecode = TypeCode(pt.getType(), simplified) + "<";
				List<Type> tas = pt.typeArguments();
				Iterator<Type> itr = tas.iterator();
				while (itr.hasNext()) {
					Type tt = itr.next();

					// System.err.println("ParameterizedTypeSmallType :" +
					// tt.getClass());

					typecode += TypeCode(tt, simplified);
					if (itr.hasNext()) {
						typecode += ",";
					}
				}
				typecode += ">";
				// }
			}
		}
		if (node instanceof IntersectionType) {
			IntersectionType tnode = (IntersectionType) node;
			List<Type> types = tnode.types();
			Iterator<Type> itr = types.iterator();
			typecode = "";
			while (itr.hasNext()) {
				Type t = itr.next();
				String tstr = TypeCode(t, simplified);
				typecode = typecode + "&" + tstr;
			}
			if (types.size() > 0) {
				typecode = typecode.substring(1);
			}
		}
		if (node instanceof UnionType) {
			UnionType tnode = (UnionType) node;
			List<Type> types = tnode.types();
			Iterator<Type> itr = types.iterator();
			typecode = "";
			while (itr.hasNext()) {
				Type t = itr.next();
				String tstr = TypeCode(t, simplified);
				typecode = typecode + "|" + tstr;
			}
			if (types.size() > 0) {
				typecode = typecode.substring(1);
			}
		}*/